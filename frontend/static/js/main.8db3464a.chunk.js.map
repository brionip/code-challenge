{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","error","isLoaded","items","message","name","handleClick","bind","this","populateList","data","text","fetch","method","headers","body","JSON","stringify","then","r","console","log","setState","catch","res","json","result","value","className","src","logo","alt","map","item","updatedAt","id","type","onChange","e","onTodoChange","target","onClick","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAAe,MAA0B,iC,eCsH1BA,E,kDAhHb,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,UAAU,EACVC,MAAO,GACPC,QAAS,GACTC,KAAM,IAER,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBATJ,E,qDAYjB,WACEC,KAAKC,iB,yBAGT,WAAe,IAAD,OACNC,EAAO,CAAEC,KAAMH,KAAKR,MAAMK,MAChCO,MAAM,wEAAyE,CAC7EC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUP,KAEtBQ,MAAK,SAAAC,GACJC,QAAQC,IAAI,WACZ,EAAKC,SAAS,CACRpB,UAAU,EACVE,QAAS,UACTC,KAAM,KAEZ,EAAKI,kBAENc,OAAM,SAACtB,GACNmB,QAAQnB,MAAM,SACd,EAAKqB,SAAS,CACRpB,UAAU,EACVE,QAAS,gB,0BAMnB,WAAgB,IAAD,OACbQ,MAAM,yEACHM,MAAK,SAAAM,GAAG,OAAIA,EAAIC,UAChBP,MACC,SAACQ,GACC,EAAKJ,SAAS,CACZpB,UAAU,EACVC,MAAOuB,OAOX,SAACzB,GACC,EAAKqB,SAAS,CACZpB,UAAU,EACVD,e,0BAMZ,SAAa0B,GACLnB,KAAKc,SAAS,CACTjB,KAAMsB,M,oBAIjB,WAAU,IAAD,SACqCnB,KAAKR,MAAxBG,GADlB,EACCF,MADD,EACQC,SADR,EACkBC,OAAOC,EADzB,EACyBA,QAChC,OACA,qBAAKwB,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,+DAIA,8BACA,6BACG5B,EAAM6B,KAAI,SAAAC,GAAI,OACb,+BACGA,EAAKtB,KADR,IACesB,EAAKC,YADXD,EAAKE,WAMlB,oDAGC/B,EAED,0CAEE,uBAAOgC,KAAK,OAAOT,MAAOnB,KAAKR,MAAMK,KAAMgC,SAAU,SAAAC,GAAC,OAAI,EAAKC,aAAaD,EAAEE,OAAOb,aAEvF,wBAAQc,QAASjC,KAAKF,YAAtB,8B,GAvGUoC,IAAMC,WCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8db3464a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        error: null,\n        isLoaded: false,\n        items: [],\n        message: '',\n        name: '',\n      };\n      this.handleClick = this.handleClick.bind(this);\n    }\n\n    componentDidMount() {\n      this.populateList();\n    }\n\n  handleClick() {\n    const data = { text: this.state.name };\n    fetch(\"https://9wbc8szixb.execute-api.ap-southeast-2.amazonaws.com/dev/todos\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data),\n    })\n    .then(r => {\n      console.log('Success');\n      this.setState({\n            isLoaded: true,\n            message: 'Success',\n            name: ''\n          });\n      this.populateList();\n    })\n    .catch((error) => {\n      console.error('Error');\n      this.setState({\n            isLoaded: true,\n            message: 'Error!'\n          });\n    });\n    \n  }\n\n  populateList() {\n    fetch(\"https://9wbc8szixb.execute-api.ap-southeast-2.amazonaws.com/dev/todos\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result\n          });\n          //console.log(result)\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\nonTodoChange(value){\n        this.setState({\n             name: value\n        });\n    }\n\n  render() {\n    const { error, isLoaded, items, message } = this.state;\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Testing a GET and POST request\n        </p>\n        \n        <div>\n        <ul>\n          {items.map(item => (\n            <li key={item.id}>\n              {item.text} {item.updatedAt}\n            </li>\n          ))}\n        </ul>\n        </div>\n        <p>\n          Broin's application\n        </p>\n        {message}\n\n        <label>\n          Name:\n          <input type=\"text\" value={this.state.name} onChange={e => this.onTodoChange(e.target.value)} />\n        </label>\n        <button onClick={this.handleClick}>\n        Add New\n        </button>\n      </header>\n      \n    </div>\n  );\n}\n}\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}